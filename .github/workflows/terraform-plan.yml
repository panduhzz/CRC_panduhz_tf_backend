name: "Terraform Plan"

on:
  pull_request:

env:
  TF_CLOUD_ORGANIZATION: "panduhz"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_WORKSPACE: "panduhz-backend-test"
  CONFIG_DIRECTORY: "./"
  RESOURCE_GROUP_NAME: "panduhz_backend_rg_test"
  AZURE_FUNCTIONAPP_NAME: 'panduhz-backend-app-test'
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './src'
  PYTHON_VERSION: '3.11'

jobs:
  terraform:
    if: github.repository != 'hashicorp-education/learn-terraform-github-actions'
    name: "Deploy Test Infrastructure"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
        id: plan-upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}

      - name: Create Apply Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
        id: apply-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.apply-upload.outputs.configuration_version_id }}
  
      - name: Apply
        uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.0.0
        if: fromJSON(steps.apply-run.outputs.payload).data.attributes.actions.IsConfirmable
        id: apply
        with:
          run: ${{ steps.apply-run.outputs.run_id }}
          comment: "Apply Run from GitHub Actions CI ${{ github.sha }}"
  deployfunction: 
    needs: terraform
    name: "Deploy Function"
    runs-on: Ubuntu-latest
    steps:
      - name: Checkout GitHub Action
        uses: actions/checkout@v3
      
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_RBAC_CREDENTIALS }}
          enable-AzPSSession: true
      
      - name: 'Get FunctionApp publish profile'
        id: publishprofile
        uses: aliencube/publish-profile-actions@v1
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_RBAC_CREDENTIALS }}
        with:
          resourceGroupName: ${{ env.RESOURCE_GROUP_NAME }}
          appName: ${{ env.RESOURCE_GROUP_NAME }}

      - name: Setup Python Environment
        uses: actions/setup-python@v4
        with: 
          python-version: ${{ env.PYTHON_VERSION }}

      - name: 'Install project dependencies using Pip'
        shell: bash
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          python -m pip install --upgrade pip
          pip install -r requirements.txt --target=".python_packages/lib/site-packages"
          popd

      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          publish-profile: ${{ steps.publishprofile.outputs.profile }}
          scm-do-build-during-deployment: true
          enable-oryx-build: true
      
  test:
    needs: deployfunction
    name: "Test API"
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-asyncio playwright
        pip install pytest-playwright
        pip install -r src/requirements.txt
        playwright install
    - name: Ensure browsers are installed
      run: python -m playwright install --with-deps
    - name: Run Playwright tests
      env: 
        CosmosConnectionString: ${{ secrets.CosmosConnectionString }}
      run: pytest src/tests/test_api.py --tracing=retain-on-failure 
    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-traces
        path: test-results/
        retention-days: 7
  destroy:
    name: "Destroy testing workspace"
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: terraform destroy
      uses: dflook/terraform-destroy-workspace@v1
      with:
        path: terraform
        workspace: ${{ github.head_ref }}

     